// Generated by CoffeeScript 1.6.3
(function() {
  var IP, PORT, cache, createServer, cron_job, end, ns, parse, query, queryAll, resolveCname, server, start, _ref, _ref1;

  createServer = require('http').createServer;

  parse = require('url').parse;

  resolveCname = require('dns').resolveCname;

  _ref = require('./ns.json'), ns = _ref.ns, start = _ref.start, end = _ref.end;

  cache = {};

  query = function(i, n) {
    var domain, subdomain;
    subdomain = n + '-' + ns + i;
    console.log(subdomain);
    domain = subdomain + '.rhcloud.com';
    return resolveCname(domain, function(err, cname) {
      console.log(cname);
      if (err != null) {
        return;
      }
      return resolveCname(cname[0], function(err, ec2_cname) {
        console.log(ec2_cname);
        if (err != null) {
          return;
        }
        return cache[subdomain] = ec2_cname[0];
      });
    });
  };

  queryAll = function() {
    var _i, _results;
    return (function() {
      _results = [];
      for (var _i = start; start <= end ? _i <= end : _i >= end; start <= end ? _i++ : _i--){ _results.push(_i); }
      return _results;
    }).apply(this).forEach(function(i) {
      return [1, 2, 3].forEach(function(n) {
        return query(i, n);
      });
    });
  };

  cron_job = function() {
    queryAll();
    return setTimeout(cron_job, 30 * 1000);
  };

  cron_job();

  server = createServer(function(req, res) {
    var cname, q;
    q = parse(req.url, true).query.q;
    if ((q != null) && ((cname = cache[q]) != null)) {
      return res.end(JSON.stringify(cname));
    } else {
      return res.end(JSON.stringify(cache));
    }
  });

  _ref1 = process.env, PORT = _ref1.OPENSHIFT_NODEJS_PORT, IP = _ref1.OPENSHIFT_NODEJS_IP;

  server.listen(PORT || 3000, IP || '127.0.0.1');

}).call(this);
